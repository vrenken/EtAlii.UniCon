<ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:uie="UnityEditor.UIElements" xsi="http://www.w3.org/2001/XMLSchema-instance" engine="UnityEngine.UIElements" editor="UnityEditor.UIElements" noNamespaceSchemaLocation="../../../../../UIElementsSchema/UIElements.xsd" editor-extension-mode="True">
    <ui:ScrollView>
        <ui:Label tabindex="-1" text="&lt;b&gt;Examples&lt;/b&gt;&#10;&#10;&lt;indent=5px&gt;• RequestPath like &apos;/health%&apos;&lt;/indent&gt;&#10;&lt;indent=5px&gt;• Cart == &apos;User&apos;&lt;/indent&gt;&#10;&#10;&lt;b&gt;Properties&lt;/b&gt;&#10;&#10;&lt;indent=5px&gt;• All first-class properties of the event - no special syntax: &lt;mark=#11ff1122&gt;SourceContext&lt;/mark&gt;, &lt;mark=#11ff1122&gt;RequestPath&lt;/mark&gt; and &lt;mark=#11ff1122&gt;Cart&lt;/mark&gt; are used in the formatting examples above&lt;/indent&gt;&#10;&lt;indent=5px&gt;• &lt;mark=#11ff1122&gt;@t&lt;/mark&gt; - the event&apos;s timestamp, as a &lt;mark=#11ff1122&gt;DateTimeOffset&lt;/mark&gt;&lt;/indent&gt;&#10;&lt;indent=5px&gt;• &lt;mark=#11ff1122&gt;@m&lt;/mark&gt; - the rendered message&lt;/indent&gt;&#10;&lt;indent=5px&gt;• &lt;mark=#11ff1122&gt;@mt&lt;/mark&gt; - the raw message template&lt;/indent&gt;&#10;&lt;indent=5px&gt;• &lt;mark=#11ff1122&gt;@l&lt;/mark&gt; - the event&apos;s level, as a &lt;mark=#11ff1122&gt;LogEventLevel&lt;/mark&gt;&lt;/indent&gt;&#10;&lt;indent=5px&gt;• &lt;mark=#11ff1122&gt;@x&lt;/mark&gt; - the exception associated with the event, if any, as an &lt;mark=#11ff1122&gt;Exception&lt;/mark&gt;&lt;/indent&gt;&#10;&lt;indent=5px&gt;• &lt;mark=#11ff1122&gt;@p&lt;/mark&gt; - a dictionary containing all first-class properties; this supports properties with non-identifier names, for example &lt;mark=#11ff1122&gt;@p[&apos;snake-case-name&apos;]&lt;/mark&gt;&lt;/indent&gt;&#10;&lt;indent=5px&gt;• &lt;mark=#11ff1122&gt;@i&lt;/mark&gt; - event id; a 32-bit numeric hash of the event&apos;s message template&lt;/indent&gt;&#10;&lt;indent=5px&gt;• &lt;mark=#11ff1122&gt;@r&lt;/mark&gt; - renderings; if any tokens in the message template include .NET-specific formatting, an array of rendered values for each such token&lt;/indent&gt;&#10;&#10;The built-in properties mirror those available in the CLEF format.&#10;&#10;&lt;b&gt;Literals&lt;/b&gt;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;" display-tooltip-when-elided="true" enable-rich-text="true" />
    </ui:ScrollView>
</ui:UXML>
